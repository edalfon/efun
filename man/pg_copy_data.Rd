% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postgres.R
\name{pg_copy_data}
\alias{pg_copy_data}
\title{Copy data to a postgres instance}
\usage{
pg_copy_data(
  con,
  data,
  table_name,
  sep = "|",
  drop_table = FALSE,
  create_table = TRUE,
  if_not_exists = TRUE,
  execute = TRUE
)
}
\arguments{
\item{con}{A database connection.}

\item{data}{data to copy to postgres}

\item{sep}{ The separator between columns. Defaults to the character in the set \code{[,\\t |;:]} that separates the sample of rows into the most number of lines with the same number of fields. Use \code{NULL} or \code{""} to specify no separator; i.e. each line a single character column like \code{base::readLines} does.}

\item{drop_table}{logical, whether to drop the table before creating it}

\item{create_table}{boolean TRUE if the table should be created. Otherwise,
it assumes the table exists}

\item{if_not_exists}{logical, to add IF NOT EXISTS to the query}

\item{execute}{logical, whether to execute the query using \code{con}}
}
\value{
this is used for the side effect
}
\description{
Hernando, my use case for this is those cases where the data are small
enough to load it in R, but not so small so one can not put up with
a bunch of insert statements (the default when you use dplyr::copy_to())
Sometimes it is more convenient to initially load and wrangle a dataset in R
but when you later need it up in postgres, this is a quick-and-dirty way to
do it (if the data are not just a few rows but millions, it would take
forever to use a bunch of insert statements)
}
